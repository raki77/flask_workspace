cd : 자신의 홈디렉토리로 이동한다 

리눅스에서 계정을 생성하면 /home/계정명 폴더가 생성된다. 
계정명 conan 홈디렉토리 /home/conan 이 된다. 

pwd  : 현재 위치 확인명령 

su 계정명   su만쓰면    root 계정으로 이동 
conan@conan-virtual-machine:~$ su
암호: 
root@conan-virtual-machine:/home/conan# cd 
root@conan-virtual-machine:~# pwd
/root
root@conan-virtual-machine:~# 
root@conan-virtual-machine:~# 

cd ~conan  : 그 계정의 홈디렉토리로 이동한다 

cd -   :바로 전 디렉토리로 이동한다 

ls : 파일의 목록 확인 

ls -al 
ls -F
ls -i 
ls -a

1.한번에 이동
cd /etc/vmware-tools   #루트부터 이동하라 : 절대경로

2.여러번에 걸쳐서 이동 
cd /
cd etc
cd vmware-tools 

3.루트로 이동
cd /

4. 홈으로 이동
cd ~

5. 부모로 이동
cd ..

홈디렉토리
/home/conan 
root계정만 홈디렉토리가 다르다  
/root 

useradd -m user01   : /home/user01 
useradd -m user02   : /home/user02
useradd -m user03   : /home/user03

root로 계정변경 
su 
1234

passwd user01 
새로운패스워드 : 1234
새로운패스워드 : 1234

passwd user02 
새로운패스워드 : 1234
새로운패스워드 : 1234

passwd user03 
새로운패스워드 : 1234
새로운패스워드 : 1234

변경된패스워드 
conan/12345678
로그온 계정은 passwd로 바뀐다. 
su user01

리눅스는 멀티유저 - 여러명의 사용자가 동시 접속 
/ - 여기는 마음대로 못쓴다 
각자 홈디렉토리에서 작업한다 

cd ~
mkdir  test 
cd     test           
touch  linux.txt    최초에는 파일을 생성한다  한참있다가 
ls 
touch  linux.txt    파일의  정보가 갱신된다. 
ls 


디렉토리 mkdir 옵션  
mkdir test2 

#폴더를 경로 포함해서 여러개 

계정이 conan 
/home/conan/ubuntu/test 

cd ~ 
mkdir ubuntu/test
ls

mkdir -p ubuntu/test
ls -l 

drwxrwxr-x     d : 디렉토리 
               r : read 권한 
               w : write 권한 
               x : execute 권한 

d rwx        rwx       r-x 
  소유권자    그룹      다른계정(guest)- 그룹밖의 계정 

su user02 
cd /home/conan/ubuntu 
touch test.txt      권한없다고 나온다 

-m  :디렉토리 생성할때 폴더에 권한을 부여할 수 있다 

su conan 
12345678

cd ~
mkdir -m 644 test3        644 ->  110  100  100   
ls -l                            drw-  r--  r--

vi test.sh 
esc 누르고 i 누른다음에 

ls
ls -a
ls -l 

esc :wq    저장하고 빠져나온다 

ls -l 
./test.sh   실행안됨 - 실행권한이 없다 
ls -l test.sh 
chmod 755 test.sh    
./test.sh 


rmdir test3   파일도 폴더도 없을 경우 삭제된다.  
rmdir ubuntu  안에 디렉토리 있어서 삭제 안된다


rm  -r ubuntu  -r 디렉토리를 순회하면서 삭제한다 
rm  -rf ubuntu  디렉토리 완전 삭제 

cp  명령어 연습 

touch test1.txt 
현재폴더(home/conan)에 있는  test1.txt 파일을 cptest폴더에 복사한다 
mkdir cptest
cp test1.txt cptest/ 
ls cptest 

/var/tmp  폴더 내용을 복사하자 
ls /var/tmp

cp -r /var/tmp  ./cptest/

문제1.   home/계정  아래에 폴더 만들기 

         workspace
            ㄴ myapp1 
                 ㄴ  src 

        차례차례 만들기 
        한꺼번에 만들기 

        mkdir -p  workspace/myapp1/src 
        rm -rf workspace               파일뿐아니라 디렉토리까지 한번에 삭제 

        mkdir workspace
        chmod 755 workspace
        cd workspace 
        mkdir myapp1 
        chmod 755 myapp1 
        cd myapp1 
        mkdir src 
        cd ~ 


문제2  src  폴더에 파일 생성하기 
       test1.html 
       test2.html 

    cd workspace/myapp1/src 
    touch test1.html
    touch test2.html

문제3  myapp1폴더 아래에  src2 만들고 위의 파일 복사하기 
    cd ..
    mkdir src2 
    cp -r src/.  src2/ 

chmod 755 폴더명 또는 파일명 

su
cp -r /var ./workspace 
cd workspace
ls 

-i 동일한 파일 있을때 물어본다 
-v 복사하는 파일명 경로명 나온다 
-r 서브디렉토리 포함해서 

cd ..
cp -rvi /var ./workspace 

ctrl-c 작업취소 

rm -rf workspace 

cp 명령어는 오래걸리는데 삭제는 왜 빠를까
리눅스에서는 디렉토리 정보가 저장되는 공간 i-node 
실제로 다 지울려면 시간이 너무 많이 걸린다. 파일은 냅두고 
파일이름에다 첫글자를 예를들어 ? 로 바꾼다. 나중에 다 복구된다. 

파일 삭제 명령어 
rm  파일명 

cd test
touch a.txt b.html c 
touch d.txt e.html f 
ls -l 

rm linux.txt    
ls -l

rm *.html   확장자가 html 인 파일만 지운다.  *:와일드카드 
            파일이름은 아무거나 확장자는 html 지정 
ls -l 

rm *.*     모두 지우기(적어도 확장자 있을때) 
ls -l 

rm *       전체삭제
ls -l


##########################
mv 명령어 : 폴더 이동 또는 폴더명 바꾸기
##########################
su 계정명
cd ~  
mkdir mvtest1  
touch mvtest1/test1 
touch mvtest1/test2 
touch mvtest1/test3
ls mvtest1

mv mvtest1 mvtest2    
ls 

ls -> dir 
touch  명령어는 없음 (mkdir, cd, rmdir, rm, cp -> copy)

cd ~
cat test.sh 
cat /etc/passwd 

root 계정 패스워드 수정하기 
su
엔터키 
passwd 
1234
1234

계정만들기 
useradd -m user01 
useradd -m user02 
useradd -m user03 

su 본인계정 

cat /etc/updatedb.conf 
cd ~ 
cat .profile     내 환경설정파일 스크립트파일 
cat .local       디렉토리라 안보여줌 
cat .bash_history   내가 쳤던 명령어들이 여기 저장되어 있다 
cat -b .bash_history
cat -n .bash_history

cat > file1     redirection 
I like star 
red star
blue star
ctrl-c

ls 

cat file1 
cat >> file1    앞의 파일에 내용을 추가한다 
I like star 
ctrl-c

cat file1

more .bash_history
cat .bash_history  | more   한페이지씩 보여준다 

cd /etc 
ls -al 
ls -al | more 

cd ~ 
ls -al /etc > file2    실행결과가 file2로 출력된다. 
cat file2 

파일앞의 5줄만 보겠다 
head -5 file2   

끝에서부터 5줄만 보겠다 
tail -5 file2 

리눅스 실시간 로그 확인시 중요 - 톰캐로그같은거 볼때 주요 명령어 
로그파일이 실시간으로 계속 쌓이면  최신부분부터 봐야한다 
주요 옵션이 -f   tail을 종료하지 않고 파일의 업데이트내용을 신시간으로 계속 출력한다 

***** 중요하다 ************
tail -f 로그파일 

less file2 

#file2 내용에서 grep 명령어로 vmware를 찾아보자 
grep 찾고자하는패턴  파일명  

grep vmware file2

conan 이라는 계정이 존재하는지 찾아보자 
/etc/passwd에 계정정보가 있다 
grep  conan /etc/passwd 

grep [옵션][패턴][파일명]

grep conan /etc/passwd

/etc폴더의 모든 파일내에 conan 이 존재하는지 찾는다 
grep conan /etc/*    

정규식(패턴)  

^시작하는 
[ab] a 또는 b를 포함하는 

a 또는 b로 시작하는 
grep  ^[ab]   file2 

a또는 b를 포함하는 단어가 있는 문장 다 출력 
grep  [ab]   file2 

$가 끝나는 이라는 의미임 
grep  ^d   file2

caf로 끝나는 라인 검색 
grep caf$ file2 

l자가 포함되는 라인 보여주기 
grep l file2 

l자로 끝나는 라인 보여주기 
grep l$ file2 

u로 시작하고 d로 끝나는 5자리 글자를 포함하는   
grep u...d  file2 

파이프를 이용해서 입력을 받기도 한다 
ls - al | grep l$ 

파이프를 이용해서 입력을 받아서 검색해서 다시 출력할 수도 있다
 
ls - al | grep l$  > file3 
cat file3 

지금 현재 진행중인 프로세스 확인하기 
ps -ef  
ps -ef | grep bash  

cat > file4 
cherry
banana
apple
Apple
peach 
cat 
dog
ctrl-c 

grep 명령어 써서 apple 찾기 
grep 명령어 써서 a로 시작하는 단어 포함란 라인 찾기 
grep 명령어 써서 le 로 끝나는 단어 포함한 라인 찾기 

grep apple file4 
grep ^a    file4 
grap le$   file4 

grep 대소문자 상관없이 
grep [aA]pple  file4 


find 명령어 

현재폴더에서   test라는 이름을 찾는다 
find . -name "test"

/루트 폴더부터 서브디렉토리까지 다 찾는다 힘들다 
find / -name "test"

/etc폴더아래에 passwd  파일 찾기 
find /etc -name "passwd"

su

디렉토리만 검색 
find . -name "test*"  -type d 

find . -name "test*" 

cat > test2.txt 
This is test file 
ctrl-c 

cat > test3.txt 
This is test file 333333333  
ctrl-c 

cat > test4.txt 
This is test file 4444  
ctrl-c 

find . -name "t*.txt" -exec cat {} \;

t로 시작하고 확장자 txt파일 몽땅 삭제하기 


find . -name "t*.txt" -exec rm {} \;






























































































































































































